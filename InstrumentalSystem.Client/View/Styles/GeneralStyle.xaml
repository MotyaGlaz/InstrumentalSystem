<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="\View\Dictionaries\ColorDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    
    <Style x:Key="modal bt" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource main 3}" />
        <Setter Property="Foreground" Value="{StaticResource black 5}" />
        <Setter Property="Height" Value="40" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="Button" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="22"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}">
                        <Label Margin="10 0" HorizontalAlignment="Center" Content="{TemplateBinding Content}" VerticalAlignment="Center" 
                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 2}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 1}"/>
                            <Setter Property="Foreground" Value="{StaticResource black 4}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="window bar bt" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource black 5}" />
        <Setter Property="Foreground" Value="{StaticResource black 1}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="Button" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel HorizontalAlignment="Left" LastChildFill="True">
                        <Border Width="1" Background="{StaticResource black 4}" DockPanel.Dock="Left"/>
                        <Border Background="{TemplateBinding Background}">
                            <Label Margin="10 0" HorizontalAlignment="Center" Content="{TemplateBinding Content}" VerticalAlignment="Center" 
                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 4}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 3}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="window bar tool bt" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource black 5}" />
        <Setter Property="Foreground" Value="{StaticResource black 1}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="Button" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Label HorizontalAlignment="Center" Content="{TemplateBinding Content}" VerticalAlignment="Center" 
                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 4}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource main 3}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="menu bar" TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{StaticResource black 5}" />
        <Setter Property="Foreground" Value="{StaticResource black 1}" />
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="menu item 1" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource black 5}" />
        <Setter Property="Foreground" Value="{StaticResource black 1}" />
        <Setter Property="Height" Value="30"/>
        <Setter Property="Header" Value="Item"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="menu item 2" TargetType="{x:Type MenuItem}">
        <Setter Property="Background" Value="{StaticResource main 5}" />
        <Setter Property="Foreground" Value="{StaticResource black 1}" />
        <Setter Property="Height" Value="25"/>
        <Setter Property="Header" Value="Item"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="avatar border" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="LightCoral" />
        <Setter Property="Foreground" Value="{StaticResource black 5}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Content" Value="ФИ" />
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" CornerRadius="30"
                            Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Label HorizontalAlignment="Center" Content="{TemplateBinding Content}" VerticalAlignment="Center" 
                               FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="grid splitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{StaticResource black 4}"/>
        <Setter Property="ResizeBehavior" Value="PreviousAndNext"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>

    </Style>
    
</ResourceDictionary>